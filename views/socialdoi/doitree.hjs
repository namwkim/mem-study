<!DOCTYPE html>
<html>
  	<head>
	    <title>{{ title }}</title>
	    <link rel='stylesheet' href='/bower_components/bootstrap/dist/css/bootstrap.min.css' />
	    <link rel='stylesheet' href='/bower_components/bootstro/bootstro.min.css' />
	    <link rel='stylesheet' href='/stylesheets/doitree.css'/>
	    <link rel='stylesheet' href='/bower_components/jquery-ui/themes/smoothness/jquery-ui.min.css' />

	    <script src="/bower_components/d3/d3.js"></script>	
		<script src="/bower_components/d3-tip/index.js"></script>

	    <script src="/javascripts/turkify.js"></script>
	    <script src="/javascripts/nw.js"></script>	
	    <script src="/javascripts/doitree.js"></script>
	    <script src="/javascripts/fisheyefilter.js"></script>
	    <script src="/bower_components/jquery/dist/jquery.min.js"></script>
	    <script src="/bower_components/jquery-ui/jquery-ui.min.js"></script>
	    <script src="/bower_components/bootstrap/dist/js/bootstrap.min.js"></script>
	    <script src="/bower_components/bootstro/bootstro.min.js"></script>
	    <script src="/bower_components/underscore/underscore-min.js"></script>
	    <script src="/bower_components/bootbox/bootbox.js"></script>
	    <script src="https://www.google.com/recaptcha/api.js" async defer></script>
	    <script src="/bower_components/angular/angular.min.js"></script>

	    <script type="text/javascript">

	    	var app = angular.module('myApp', [], function($interpolateProvider) {
				$interpolateProvider.startSymbol('<%');
				$interpolateProvider.endSymbol('%>');
			});

			app.controller('myCtrl', function($scope, $http) {
				//load data
				$scope.selected = null;
				$scope.programs = [];
				$scope.params = {
					isSocialOn: true,
					isLocalOn: true,
					isFocusOn: true,
					weight: 5.0,
					useDOILabel: true,
					useNaviHist: false
				}
				$http.get('/socialdoi/budgets')
				.success(function(res){
					$http.get('/socialdoi/interests')	
					.success(function(interests){
						$http.get('/socialdoi/navihist')	
						.success(function(nh){

						    $scope.budgets = res;
						     //add social interests
							$scope.naviHist 	= {};	
						    for (var i in nh){
						    	if (nh[i].program!=""){
							    	var key = nh[i].cabinet + nh[i].department + nh[i].program;
							    	if (_.has($scope.naviHist, key)==false){
							    		$scope.naviHist[key] = 0	
							    	}
							    	$scope.naviHist[key] += 1;					    		
						    	}
						    	if (nh[i].department!=""){
							    	var key = nh[i].cabinet + nh[i].department;
							    	if (_.has($scope.naviHist, key)==false){
							    		$scope.naviHist[key] = 0	
							    	}
							    	$scope.naviHist[key] += 1;					    		
						    	}
						    	if (nh[i].cabinet!=""){
							    	var key = nh[i].cabinet;
							    	if (_.has($scope.naviHist, key)==false){
							    		$scope.naviHist[key] = 0	
							    	}
							    	$scope.naviHist[key] += 1;					    		
						    	}
						    }

						    console.log($scope.naviHist);
						    $scope.interests 	= interests;

						    //add social interests
						    $scope.calcSocialDOI();

						    $scope.fisheyefilter = FisheyeFilter($scope.params.isSocialOn,
						    									$scope.params.isLocalOn,
						    									$scope.params.isFocusOn,
						    									$scope.params.weight);
						    var config = {
						    	container: "#chart",
						    	data: $scope.budgets,
						    	margin: {top: 30, right: 0, bottom: 30, left: 210},
						    	width : 840,
						    	height : 700,
						    	filter : $scope.fisheyefilter,
						    	threshold: 1,
						    	useDOILabel: $scope.params.useDOILabel,
						    	onClick: function(d){
						    		$scope.$apply(function(){
						    			$scope.selected = d;
						    			console.log($scope.selected.name);
						    		});
						    	}
						    };					    

						    

						    $scope.cstree = CSTree(config);
		                	$scope.cstree.create();
	                	});
					});
					

				});
				$scope.calcSocialDOI = function(){
					if ($scope.params.useNaviHist==false){
					    $scope.budgets.visitCnt = $scope.interests.total;
					    $scope.budgets.visitRatio = $scope.interests.maxRatio;
					    $scope.budgets.visitDOI = 0;
					    for (var i in $scope.budgets.children){
					    	var cabinet = $scope.budgets.children[i];
					    	if (_.has($scope.interests.bycabinet, cabinet.name)){
					    		cabinet.visitCnt = $scope.interests.bycabinet[cabinet.name].visitCnt;
					    		cabinet.visitDOI = $scope.interests.bycabinet[cabinet.name].visitDOI;
					    		cabinet.visitRatio = $scope.interests.bycabinet[cabinet.name].visitRatio;
					    	}else{
					    		cabinet.visitCnt = cabinet.visitRatio = 0;
					    		cabinet.visitDOI = $scope.interests.maxRatio;
					    	}
					    	for (var j in cabinet.children){
					    		var dept = cabinet.children[j];
						    	if (_.has($scope.interests.bydept, dept.name)){
						    		dept.visitCnt = $scope.interests.bydept[dept.name].visitCnt;
						    		dept.visitDOI = $scope.interests.bydept[dept.name].visitDOI;
						    		dept.visitRatio = $scope.interests.bydept[dept.name].visitRatio;
						    	}else{
						    		dept.visitCnt = dept.visitRatio = 0;
						    		dept.visitDOI = $scope.interests.maxRatio;
						    	}
						    	for (var k in dept.children){
						    		var program = dept.children[k];
						    		if (_.has($scope.interests.byprogram, program.name)){
						    			program.visitCnt = $scope.interests.byprogram[program.name].visitCnt;
						    			program.visitDOI = $scope.interests.byprogram[program.name].visitDOI;
						    			program.visitRatio = $scope.interests.byprogram[program.name].visitRatio;
						    		}else{
						    			program.visitCnt = program.visitRatio = 0;
						    			program.visitDOI = $scope.interests.maxRatio;
						    		}
						    	}
						    }
					    }
				   	}else{
					    // $scope.budgets.visitCnt = _.values($scope.naviHist).length;
					    // $scope.budgets.visitRatio = $scope.interests.maxRatio;
					    var max = _.max(_.values($scope.naviHist));
					    var sum = _.reduce(_.values($scope.naviHist), function(memo, num){ return memo + num; }, 0);
					    $scope.budgets.visitDOI = 0;
				   		for (var i in $scope.budgets.children){
				   			var cabinet = $scope.budgets.children[i], key = cabinet.name;
				   			if (_.has($scope.naviHist, key)){
				   				cabinet.visitDOI = (max-$scope.naviHist[key])/sum;
				   			}else{
				   				cabinet.visitDOI	= max/sum;	
				   			}
				   			for (var j in cabinet.children){
				   				var dept = cabinet.children[j], key = cabinet.name + dept.name;
					   			if (_.has($scope.naviHist, key)){
					   				dept.visitDOI = (max-$scope.naviHist[key])/sum;
					   			}else{
					   				dept.visitDOI	= max/sum;	
					   			}
				   				for (var k in dept.children){
						    		var program = dept.children[k], key = cabinet.name + dept.name + program.name;
						   			if (_.has($scope.naviHist, key)){
						   				program.visitDOI = (max-$scope.naviHist[key])/sum;
						   			}else{
						   				program.visitDOI	= max/sum;	
						   			}
						    	}
				   			}
				   		}
				   		console.log($scope.budgets);
				   	}
				}
				$scope.OnChange = function(){
					$scope.fisheyefilter.setParams($scope.params.isSocialOn,
		    									$scope.params.isLocalOn,
		    									$scope.params.isFocusOn,
		    									$scope.params.weight);
					$scope.cstree.useDOILabel($scope.params.useDOILabel);
					$scope.calcSocialDOI();
					$scope.cstree.update($scope.selected);
				}
				$scope.Add = function(){
			    	console.log("add")
			    	if ($scope.selected==null || $scope.selected.program==null){
			    		$("#addWarning").effect( "shake" );
			    		return;
			    	}
			    	if (_.contains($scope.programs, $scope.selected)){
			    		bootbox.alert("WARNING: The selected program already exists!");
			    		return;
			    	}
			    	$scope.programs.push($scope.selected);
			    }
			    $scope.Remove = function(idx) {
			    	$scope.programs.splice(idx, 1);
			    }
				$scope.Finish = function(){
			    	if ($scope.programs.length<5){
			    		$("#finishWarning").show().effect( "shake" ).delay(1000).toggle( "fade" );
			    		return;
			    	}
			    	console.log($scope.programs);
			    	
			    }
			});
	    </script>
  	</head>
  	<body ng-app="myApp" ng-controller="myCtrl">
  		<div class="container" style="margin:10px">
  		<div class="row">
  			<div class="col-md-9">
				<div id="chart"></div>	
  			</div>
  			<div class="col-md-3">
				<div class="panel panel-primary">
					<div class="panel-heading">
				    	<h3 class="panel-title"><% budgets.name %></h3>
				  	</div>
					<div class="panel-body">
						<div class="well">
							<strong> DOI(x,y) </strong> = API(x) <br>
						 		<div class="checkbox">
							    	<label>
						      			<input type="checkbox" ng-model="params.isFocusOn" ng-change="OnChange()"> + D(x,y) 
								    </label>
							  	</div>
						 		<div class="checkbox">
							    	<label>
						      			<input type="checkbox" ng-model="params.isLocalOn" ng-change="OnChange()"> + Local DOI (x)
								    </label>
							  	</div>
					 			<form class="form-inline">

							    	<div class="checkbox">
									    <label>
									      	<input type="checkbox" ng-model="params.isSocialOn" ng-change="OnChange()"> +  
									    </label>
								    </div>
							     	<div class="form-group">
								    	Weight (<input ng-model="params.weight" ng-change="OnChange()" type="text" size="2" class="form-control" id="weight">)
								  	</div> x Social DOI (x)
								  	<br>
								    <div class="checkbox">
										<label>
										  	<input type="checkbox" ng-model="params.useDOILabel" ng-change="OnChange()"> Use DOI Label
										</label>
									</div>	
								    <div class="checkbox">
										<label>
										  	<input type="checkbox" ng-model="params.useNaviHist" ng-change="OnChange()"> Use Navigation Histories
										</label>
									</div>	
								</form>
						</div>
						<div class="panel panel-default">
  							<div class="panel-body">
								<div id="addWarning" class="alert alert-danger" role="alert" ng-if="selected.program==null">
									<span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span> Select a Budget Program!</div>
								<div class="alert alert-success" role="alert" ng-if="selected.program!=null">
									<span class="glyphicon glyphicon-ok" aria-hidden="true"></span> Good Job! If you find this program interesting, please add it to the list!</div>
								<table class="table table-condensed">
								  <tr>
								  	<td>Cabinet</td>
								  	<td><% selected.cabinet %></td>
								  </tr>
								  <tr>
								  	<td>Department</td>
								  	<td><% selected.department %></td>
								  </tr>
								  <tr>
								  	<td>Program</td>
								  	<td>
							  			<strong><% selected.program %></strong>
							  		</td>
								  </tr>
								  <tr>
								  	<td>Budget</td>
								  	<td>
							  			<strong><% selected.approved | currency:"$ ":0%></strong>
							  		</td>
								  </tr>
								  <tr>
								  	<td>Visit Count</td>
								  	<td>
							  			<strong><% selected.visitCnt %> people visited.</strong>
							  		</td>
								  </tr>

								</table>
							    <button type="button" style="width:100%" class="btn btn-info" aria-label="Left Align" ng-click="Add()">
								  	<span class="glyphicon glyphicon-plus" aria-hidden="true"></span> Add
								</button>
							  </div>
							</div>
						</div>
						<center class="lead">Programs of Interest</center>
						<table class="table" style="text-align:center"	>
							<thead><tr><td><strong>#</strong></td><td ><strong>Program</strong></td></tr></thead>
							<tbody>
								<tr ng-repeat="x in programs">
									<td><% $index+1 %></td>
									<td><% x.program %><button type="button" class="btn btn-info btn-xs" style="float:right"  aria-label="Left Align" ng-click="Remove(x)">
								  	<span class="glyphicon glyphicon-remove" aria-hidden="true"></span>
								</button>
									</td>
								</tr>
								<tr>
									<td colspan="2">
										<div id="finishWarning" style="display:none" class="alert alert-danger" role="alert">
									<span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>Please add at least five programs!</div>
										<button type="button" style="width:100%" class="btn btn-success" aria-label="Left Align" ng-click="Finish()"><span class="glyphicon glyphicon-pencil" aria-hidden="true"></span> Finish
										</button>
									</td>
								</tr>
							</tbody>							
						</table>
						
						
						
					</div>
				</div>
  			</div>
  			
		</div>
		</div>
  	</body>
</html>