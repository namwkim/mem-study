<!DOCTYPE html>
<html>

<head>
  <title>{{ title }}</title>
  <link rel='stylesheet' href='/bower_components/bootstrap/dist/css/bootstrap.min.css' />
  <link rel='stylesheet' href='/bower_components/bootstro/bootstro.min.css' />
  <link rel='stylesheet' href='/bower_components/jquery-ui/themes/smoothness/jquery-ui.min.css' />
  <link rel='stylesheet' href='/bower_components/seiyria-bootstrap-slider/dist/css/bootstrap-slider.min.css' />
  <link rel='stylesheet' href='/stylesheets/bubble_admin.css' />

  <script src="/bower_components/jquery/dist/jquery.min.js"></script>
  <script src="/bower_components/jquery-ui/jquery-ui.min.js"></script>
  <script src="/bower_components/bootstrap/dist/js/bootstrap.min.js"></script>
  <script src="/bower_components/bootstro/bootstro.min.js"></script>
  <script src="/bower_components/underscore/underscore-min.js"></script>
  <script src="/bower_components/bootbox/bootbox.js"></script>
  <script src="/javascripts/heatmap.js-2.0/build/heatmap.js"></script>
  <script src="/bower_components/angular/angular.min.js"></script>
  <script src="/bower_components/spinjs/spin.js"></script>
  <script src="/bower_components/seiyria-bootstrap-slider/dist/bootstrap-slider.min.js"></script>
  <script src="/javascripts/turkify.js"></script>

  <script type="text/javascript">
    var PAGE_SIZE = 30;
    var pageNum = 1;
    var totalPage = 597;
    var loadComplete = 2;
    var progress = 0;
    var logs = [];
    $(document).ready(function() {
      Initialize();
    });
    /*
			function LoadMore(lastID, callback){
				$.get('/saliency/logs', {pageSize:PAGE_SIZE, lastID: lastID},  function(res){
					console.log(res.logs.length);
					//copy new data (if, exist)
					for (var i in res.logs){
						logs.push(res.logs[i]);
					}
					//check if complete
					if (res.lastID==null){
						loadComplete=1;
						console.log("load complete!");
						callback.call();
						$("#progress-bar").css('width', "100%").attr('aria-valuenow', 100);
						$("#progress-modal").modal("hide");
						return;
					}
					progress+=15;
	                $("#progress-bar").css('width', progress+'%').attr('aria-valuenow', progress);
					//try loading more
					console.log('loading additional logs...');
					LoadMore(res.lastID, callback)
				});
			}*/
    var app = angular.module('myApp', [], function($interpolateProvider) {
      $interpolateProvider.startSymbol('<%');
      $interpolateProvider.endSymbol('%>');
    });
    app.directive("repeatEnd", function($timeout) {
      return {
        restrict: "A",
        link: function(scope, element, attrs) {
          if (scope.$last) {
            $timeout(function() {
              $(element).parent().children()[0].click();
            }, 1)
          }
        }
      };
    });
    app.controller('imageCtrl', function($scope, $http) {

      $scope.pages = {};
      $scope.totalPage = 4;
      $scope._ = window._;
      $scope.imageType = "original";
      
      $scope.evalMode = true;
     

      $scope.rater = gup("rater")
      if ($scope.rater != "Michelle" && $scope.rater != "Zoya" && $scope.rater != "Nam") {
        $scope.rater = "Nam";
        $scope.evalMode = false;
      }

      $scope.updateRemaining = function() {
        $scope.doneImages = 0;
        for (var i in $scope.images) {
          if ($scope.images[i].doneCheck) $scope.doneImages++;
        }
      }
      $scope.updateCanvas = function() {
        var imagePath = $scope.imagePath
        drawImage(imagePath);
      }
      
      $scope.onCheck = function() {
        //update check status for image
        var img = _.findWhere($scope.images, {
          filename: $scope.check.image
        });
        
        img.doneCheck = true;

        // update evaluation
        $http.post('/saliency/check', $scope.check)
          .success(function() {
            console.log("check updated!");
          })
        $scope.updateRemaining();
      }
      $scope.onSuspicious = function() {
        // update evaluation
        $http.post('/saliency/check', $scope.check)
          .success(function() {
            console.log("check updated!");
          })
      }
      $scope.onClickAssmt = function(e, x) {
        if (e != null) {
          $("#assignment-list a.active").removeClass("active");
          $(e.currentTarget).addClass("active");
        }

        $scope.imagePath = x.clicks[0].data.image;
        $scope.blurredImage = $scope.imagePath.replace("targets",
          "targets_blurred_" + x.clicks[0].data.blur_radius);

        // }
        // console.log($scope.slider);
        //console.log(new Date(parseInt($scope.slider.value)))
        // set up check form
        var imageName = x.clicks[0].data.image.replace(/^.*[\\\/]/, '').slice(0, -4);
        var assignment_id = $scope.survey.assignment_id;


        //console.log($scope.check);


      }

      $scope.onClickImage = function(e) {
        if (e != null) {
          $("#image-list a.active").removeClass("active");
          $(e.currentTarget).addClass("active");
        }
        var imgName = $(e.target).text();
        for (var i in $scope.images) {
          var image = $scope.images[i]
          if (image.image == imgName) {
            //update assignments
            $scope.assignments = image.logs;
            $scope.updateRemaining();
            console.log($scope.assignments)
            break;
          }
        }
        if (x.check) {
          $scope.check = x.check;
        } else {

          $scope.check = x.check = {
            hit_id: $scope.survey.hit_id,
            assignment_id: assignment_id,
            image: imageName,
            rater: $scope.rater,
            filter: null
          }
        }

      }
      $scope.onClickPage = function(e, pnum) {
        //console.log(e.target)

        if (loadComplete == 0) {
          $("#load-alert").show().effect("shake").delay(1000).toggle("fade");
          return;
        }
        pageNum = pnum;
        if (e != null) {
          $("ul.pagination li.active").removeClass("active");
          $(e.currentTarget).addClass("active");
        }
        if ($scope.pages[pageNum] == null) { // if not loaded

          var query = {
            pageSize: PAGE_SIZE,
            pageNum: pageNum
          };
          console.log(query);
          // var parmeters = query.dbName.match(/[0-9]{2}/g).map(function(item){ return parseInt(item)});
          // BLUR_RADIUS   = parmeters[0];
          // BUBBLE_RADIUS = parmeters[1];
          var spinner = new Spinner().spin();
          $("#image-panel").prepend(spinner.el);
          $('#image-list').fadeTo("fast", 0.3);
          loadComplete = 0;
          $http.get('/saliency/pageimages', {
              params: query
            })
            .success(function(res) {

              $http.get('/saliency/checks', {
                  params: {
                    rater: $scope.rater
                  }
                })
                .success(function(checks) {

                  loadComplete = 1;
                  //update image list
                  $scope.totalPage = res.totalPage;

                  $scope.images = $scope.pages[pageNum] = res.logs;

                  console.log($scope.images);
                  console.log(checks);
                  if (checks.length > 0) {
                    $scope.checks = {};
                    //group by images
                    var imageGroup = _.groupBy(checks, function(r) {
                      return r.image
                    })
                    for (var img in imageGroup) {
                      var g = imageGroup[img];
                      $scope.checks[img] = _.groupBy(g, function(r) {
                        return r.assignment_id
                      })
                    }
                    console.log($scope.checks)
                    for (var i in $scope.images) {
                      var img = $scope.images[i].image;
                      var hasAll = 0;
                      for (var j in $scope.images[i].logs) {
                        var assID = $scope.images[i].logs[j].survey.assignment_id;
                        if (_.has($scope.checks, img) && _.has($scope.checks[img], assID)) {

                          $scope.images[i].logs[j].check = $scope.checks[img][assID][0];
                          if ($scope.images[i].logs[j].check.filter)
                            hasAll += 1;
                          console.log("check:")
                          console.log($scope.images[i].logs[j].check);
                        }
                      }

                      if (hasAll == $scope.images[i].logs.length)
                        $scope.images[i].doneCheck = true;
                      else
                        $scope.images[i].doneCheck = false;
                      //console.log("done: " + $scope.images[i].doneCheck);
                    }
                    $scope.updateRemaining();
                  } else {}
                  //remove spinner
                  $("#image-panel").find('.spinner').remove();
                  $('#image-list').fadeTo("fast", 1.0);


                })

            })

        } else {
          $scope.images = $scope.pages[pageNum];
          $scope.updateRemaining();
        }

      }

      //$scope.onClickPage(null, 0);
    });

    function Initialize() {
      $('[data-toggle="tooltip"]').tooltip()
      $('[data-toggle="popover"]').popover({
        trigger: "hover",
        container: 'body'
      })
      $("#progress-modal").modal({
        keyboard: false,
        backdrop: "static"
      });
      // progressbar
      var timer;
      timer = setInterval(function() {
        //check if complete
        if (loadComplete == 1) {
          console.log("load complete!");
          $("#progress-bar").css('width', "100%").attr('aria-valuenow', 100);
          $("#progress-modal").modal("hide");
          clearInterval(timer);
          return;
        }
        progress += 15;
        $("#progress-bar").css('width', progress + '%').attr('aria-valuenow', progress);

      }, 500);


    }

    function drawImage(imagePath, callback) {
      //draw image
      var img = new Image();
      img.onload = function() {
        var canvas = $("#saliency-canvas");
        //console.log(this.naturalWidth);
        var ctx = canvas[0].getContext('2d');
        ctx.clearRect(0, 0, canvas[0].width, canvas[0].height);

        var newSize = CalcNewImageSize(this.naturalWidth, this.naturalHeight, canvas[0].width, canvas[0].height);
        ctx.drawImage(img, 0, 0, newSize.width, newSize.height);

        if (callback) callback.call(this);

      }
      img.src = imagePath;
    }

   
    function CalcNewImageSize(imgWidth, imgHeight, canvasWidth, canvasHeight) {
      //console.log("(canvasWidth, canvasHeight) = " + canvasWidth + ", " + canvasHeight);
      //console.log("(oldWidth, oldHeight) = " + imgWidth + ", " + imgHeight);
      var newWidth = imgWidth;
      var newHeight = imgHeight;
      if (newWidth > canvasWidth) {
        newWidth = canvasWidth;
        var wratio = canvasWidth / imgWidth;
        newHeight = wratio * newHeight;
      }
      if (newHeight > canvasHeight) {
        newHeight = canvasHeight;
        var hratio = canvasHeight / imgHeight;
        newWidth = hratio * newWidth;
      }
      //console.log("(newWidth, newHeight) = " + newWidth + ", " + newHeight);
      return {
        width: newWidth,
        height: newHeight
      };
    }

  </script>
</head>

<body ng-app="myApp" ng-controller="imageCtrl">
  <!-- Progress Modal -->
  <div class="modal fade" id="progress-modal" tabindex="-1" role="dialog" aria-labelledby="progress-modal-label" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h4 class="modal-title" id="progress-modal-label">Loading Bubbles...</h4>
        </div>
        <div class="modal-body">
          <div class="progress">
            <div id="progress-bar" class="progress-bar progress-bar-striped active" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width: 0%;">
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <div class="container">
    <h3><span class="glyphicon glyphicon-search" aria-hidden="true"></span> Bubble Monitoring Interface <small ng-if="evalMode">(<% rater %>)</small></h3>
    <div class="row">
      <div class="col-md-2">
        <div class="panel panel-default">
          <div class="panel-heading">Pages</div>
          <nav class="text-center">
            <div ng-if="evalMode">Progress:
              <% doneImages %>/
                <% images.length %>
            </div>
            <ul class="pagination pagination-sm" style="margin:0 auto; float: none;" >
              <li class="animate-repeat" ng-repeat="x in _.range(1,totalPage+1)" ng-class="{active: $first}" ng-click="onClickPage($event, x)" repeat-end>
                <a href="#">
                  <% x %>
                </a>
              </li>
            </ul>
          </nav>
        </div>
      </div>
      <div class="col-md-2">
        <div id="image-panel" class="panel panel-default">
          <div id="load-alert" class="alert alert-danger" role="alert" style="display:none">Loading...</div>
          <!-- Default panel contents -->
          <div class="panel-heading">Images</div>
          <!-- List group -->
          <div id="image-list" class="list-group" style="max-height:1000px;overflow-y:scroll;">
            <a href="#" class='list-group-item' ng-repeat="x in images" ng-class="{active: $first}" ng-click="onClickImage($event, x.filename)" style="word-break: break-all;" repeat-end><span class="glyphicon glyphicon-ok text-success" style="margin-right:8px;" aria-hidden="true" ng-show="x.doneCheck"></span><% x.filename %></a>
          </div>
        </div>
      </div>
      <div class="col-md-8">
        <div class="panel panel-default">
          <div class="panel-heading">Evaluation</div>
          <div class="panel-body">
            <div class="well">
              <div class="input-group">
                <strong>Filter? </strong>
                <br>
                <span style="margin-left:20px;"></span>
                <label class="radio-inline">
                  <input type="radio" name="filter" ng-model="check.filter" value="1" ng-change="onCheck()">Use</label>
                <label class="radio-inline">
                  <input type="radio" name="filter" ng-model="check.filter" value="2" ng-change="onCheck()">Do Not Use</label>

              </div>
            </div>
            
            <canvas id="saliency-canvas" width="1000" height="600"></canvas>
          </div>

        </div>
      </div>

    </div>
  <div>
</body>

</html>
